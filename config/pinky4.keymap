/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
  behaviors {
    skq: sticky_key_quick_release {
		compatible = "zmk,behavior-sticky-key";
		label = "STICKY_KEY_QUICK_RELEASE";
		#binding-cells = <1>;
		bindings = <&kp>;
		release-after-ms = <500>;
		quick-release;
    };
	pht: positional_hold_tap {
		compatible = "zmk,behavior-hold-tap";
		label = "POSITIONAL_HOLD_TAP";
		#binding-cells = <2>;
		flavor = "hold-preferred";
		tapping-term-ms = <200>;
		quick-tap-ms = <200>;
		bindings = <&kp>, <&kp>;
	};
  };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
	
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
             &kp ESC   &kp N1   &kp N2   &kp N3    &kp N4    &kp N5     &kp MINUS                        &kp EQUAL &kp N6  &kp N7   &kp N8    &kp N9   &kp N0   &kp BSPC  
             &kp TAB   &kp Q    &kp W    &kp E     &kp R     &kp T      &kp LPAR                         &kp RPAR  &kp Y   &kp U    &kp I     &kp O    &kp P    &kp DEL 
             &kp LSHFT &kp A    &kp S    &kp D     &kp F     &kp G      &kp LBKT                         &kp RBKT  &kp H   &kp J    &kp K     &kp L    &kp SEMI &kp SQT   
             &kp LCTRL &kp Z    &kp X    &kp C     &kp V     &kp B      &mo ADJ                          &kp DEL   &kp N   &kp M    &kp COMMA &kp DOT  &kp FSLH &kp BSLH  
                                         &kp LALT  &mo LWR &kp SPACE    &kp LCTRL                        &kp RET &skq LSHFT &mo RSE  &kp LGUI
            >;
        };

        lower_layer {
            bindings = <
             &kp F12  &kp F1    &kp F2    &kp F3    &kp F4    &kp F5     &trans                         &trans  &kp F6     &kp F7    &kp F8     &kp F9     &kp F10         &kp F11 
             &trans   &kp EXCL  &kp AT    &kp LBKT &kp RBKT   &kp PIPE   &trans                         &trans  &kp UP     &kp KP_N7 &kp KP_N8  &kp KP_N9  &kp KP_ASTERISK &trans  
             &kp CAPS &kp HASH  &kp DLLR  &kp LPAR &kp RPAR   &kp GRAVE  &trans                         &trans  &kp DOWN   &kp KP_N4 &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &trans  
             &trans   &kp PRCNT &kp CARET &kp LBRC &kp RBRC   &kp TILDE  &trans                         &trans  &kp INS    &kp KP_N1 &kp KP_N2  &kp KP_N3  &kp KP_SLASH    &trans  
                                          &trans    &trans    &trans     &trans                         &trans  &kp KP_NUM &kp KP_N0 &kp KP_DOT      
            >;
        };

        raise_layer {
            bindings = <
             &trans  &trans    &trans      &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans   &trans   &trans        &trans
             &trans  &trans    &trans      &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans   &trans   &kp K_VOL_UP  &trans
             &trans  &trans    &trans      &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans   &trans   &kp K_VOL_DN  &trans
             &trans  &trans    &trans      &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans   &trans   &kp K_MUTE    &trans
                                           &trans    &trans    &trans    &trans                         &trans    &trans   &trans    &trans   
             >;
        };

        adjust_layer {
            bindings = <
            &out OUT_BLE &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none                   &none &none  &none &none &none &none &none
            &out OUT_USB &none        &none        &none        &none       &none         &none                    &none &none &none &none &none &none &none
            &none        &none        &none        &none        &none        &none         &none                   &none &none  &none &none &none &none &none
            &bt BT_CLR   &none        &none        &none        &none        &none         &none                   &none &none  &none &none &none &none &none
                                      &none        &none        &none        &none         &none                   &none &none  &none 
                                  >;
        };
    };
};